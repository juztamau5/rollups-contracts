{
  "contractName": "CartesiDApp",
  "sourceName": "contracts/dapp/CartesiDApp.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IConsensus",
          "name": "_consensus",
          "type": "address"
        },
        {
          "internalType": "contract ENS",
          "name": "_ens",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_templateHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EtherTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectEpochHash",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectOutputHashesRootHash",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectOutputsEpochRootHash",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InputIndexOutOfClaimBounds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyDApp",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VoucherReexecutionNotAllowed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IConsensus",
          "name": "newConsensus",
          "type": "address"
        }
      ],
      "name": "NewConsensus",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "voucherId",
          "type": "uint256"
        }
      ],
      "name": "VoucherExecuted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ens",
      "outputs": [
        {
          "internalType": "contract ENS",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_destination",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "inputIndexWithinEpoch",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "outputIndexWithinInput",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "outputHashesRootHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "vouchersEpochRootHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "noticesEpochRootHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "machineStateHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "outputHashInOutputHashesSiblings",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "outputHashesInEpochSiblings",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct OutputValidityProof",
              "name": "validity",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            }
          ],
          "internalType": "struct Proof",
          "name": "_proof",
          "type": "tuple"
        }
      ],
      "name": "executeVoucher",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getConsensus",
      "outputs": [
        {
          "internalType": "contract IConsensus",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTemplateHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IConsensus",
          "name": "_newConsensus",
          "type": "address"
        }
      ],
      "name": "migrateToConsensus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "setName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_notice",
          "type": "bytes"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "inputIndexWithinEpoch",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "outputIndexWithinInput",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "outputHashesRootHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "vouchersEpochRootHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "noticesEpochRootHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "machineStateHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "outputHashInOutputHashesSiblings",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "outputHashesInEpochSiblings",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct OutputValidityProof",
              "name": "validity",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            }
          ],
          "internalType": "struct Proof",
          "name": "_proof",
          "type": "tuple"
        }
      ],
      "name": "validateNotice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_inputIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_outputIndexWithinInput",
          "type": "uint256"
        }
      ],
      "name": "wasVoucherExecuted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": "0x60c06040523480156200001157600080fd5b506040516200195d3803806200195d83398101604081905262000034916200021a565b6200003f33620000d3565b600180556200004e8262000123565b6080819052600380546001600160a01b0319166001600160a01b0386811691821790925590841660a0526040805163b688a36360e01b8152905163b688a3639160048082019260009290919082900301818387803b158015620000b057600080fd5b505af1158015620000c5573d6000803e3d6000fd5b505050505050505062000274565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200012d620001a6565b6001600160a01b038116620001985760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b620001a381620000d3565b50565b6000546001600160a01b03163314620002025760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200018f565b565b6001600160a01b0381168114620001a357600080fd5b600080600080608085870312156200023157600080fd5b84516200023e8162000204565b6020860151909450620002518162000204565b6040860151909350620002648162000204565b6060959095015193969295505050565b60805160a0516116bc620002a1600039600081816101e001526106f60152600061023601526116bc6000f3fe6080604052600436106100f75760003560e01c80638da5cb5b1161008a578063c47f002711610059578063c47f0027146102fe578063f23a6e611461031e578063f2fde38b1461034a578063fc4116831461036a57600080fd5b80638da5cb5b1461027457806396487d46146102925780639d9b1145146102b2578063bc197c81146102d257600080fd5b80633f15457f116100c65780633f15457f146101ce578063522f68151461020257806361b12c6614610224578063715018a61461025f57600080fd5b806301ffc9a7146101035780631250482f14610138578063150b7a0214610158578063179e740b1461019c57600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5061012361011e366004610eb9565b61038a565b60405190151581526020015b60405180910390f35b34801561014457600080fd5b50610123610153366004610f5f565b6103c1565b34801561016457600080fd5b50610183610173366004611097565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200161012f565b3480156101a857600080fd5b506003546001600160a01b03165b6040516001600160a01b03909116815260200161012f565b3480156101da57600080fd5b506101b67f000000000000000000000000000000000000000000000000000000000000000081565b34801561020e57600080fd5b5061022261021d3660046110f6565b6105a6565b005b34801561023057600080fd5b506040517f0000000000000000000000000000000000000000000000000000000000000000815260200161012f565b34801561026b57600080fd5b5061022261063f565b34801561028057600080fd5b506000546001600160a01b03166101b6565b34801561029e57600080fd5b506101236102ad366004611122565b610653565b3480156102be57600080fd5b506101236102cd36600461118a565b6106a4565b3480156102de57600080fd5b506101836102ed36600461122b565b63bc197c8160e01b95945050505050565b34801561030a57600080fd5b506102226103193660046112d8565b6106b6565b34801561032a57600080fd5b50610183610339366004611320565b63f23a6e6160e01b95945050505050565b34801561035657600080fd5b50610222610365366004611388565b6107db565b34801561037657600080fd5b50610222610385366004611388565b610859565b60006001600160e01b03198216630271189760e51b14806103bb57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006103cb61090e565b60008080806103e56103e060208801886113a5565b610967565b9195509350915061040283836103fb89806113eb565b91906109ee565b905061041e898989876104158b806113eb565b93929190610a34565b600061045261042d88806113eb565b61043e90604081019060200161140b565b6001600160401b03168360809190911b1790565b905061045d81610a69565b1561047b576040516370de22b760e01b815260040160405180910390fd5b60008a6001600160a01b03168a8a604051610497929190611434565b6000604051808303816000865af19150503d80600081146104d4576040519150601f19603f3d011682016040523d82523d6000602084013e6104d9565b606091505b50509050801561058e576040516306449da160e41b815260026004820152602481018390526001604482015273__$f57eb21c11c6dae369da3ca36f4f48eb77$__90636449da109060640160006040518083038186803b15801561053c57600080fd5b505af4158015610550573d6000803e3d6000fd5b505050507f0eb7ee080f865f1cadc4f54daf58cc3b8879e888832867d13351edcec0fbdc548260405161058591815260200190565b60405180910390a15b9550505050505061059e60018055565b949350505050565b3330146105c65760405163a08d601d60e01b815260040160405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610613576040519150601f19603f3d011682016040523d82523d6000602084013e610618565b606091505b505090508061063a57604051630ce8f45160e31b815260040160405180910390fd5b505050565b610647610ae7565b6106516000610b41565b565b60008080806106686103e060208701876113a5565b9194509250905061067e82826103fb88806113eb565b5061069787878561068f89806113eb565b929190610b91565b5060019695505050505050565b6000608082901b831761059e81610a69565b6106be610ae7565b6040516302571be360e01b81527f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906302571be390602401602060405180830381865afa158015610745573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107699190611444565b60405163c47f002760e01b81529091506001600160a01b0382169063c47f0027906107989085906004016114a7565b6020604051808303816000875af11580156107b7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a91906114ba565b6107e3610ae7565b6001600160a01b03811661084d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61085681610b41565b50565b610861610ae7565b600380546001600160a01b0319166001600160a01b0383169081179091556040805163b688a36360e01b8152905163b688a3639160048082019260009290919082900301818387803b1580156108b657600080fd5b505af11580156108ca573d6000803e3d6000fd5b50506040516001600160a01b03841681527f4991c6f37185659e276ff918a96f3e20e6c5abcd8c9aab450dc19c2f7ad35cb59250602001905060405180910390a150565b6002600154036109605760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610844565b6002600155565b60035460405163035e6a0960e61b8152600091829182916001600160a01b03169063d79a8240906109a0903090899089906004016114fc565b606060405180830381865afa1580156109bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e1919061152a565b9250925092509250925092565b6000806109fe602086018661140b565b610a11906001600160401b031685611558565b90508281111561059e5760405163fd9ae91f60e01b815260040160405180910390fd5b6000610a41858585610bb8565b9050610a61868284606083013560255b6001600160401b03166015610be7565b505050505050565b6040516303fbaf7360e01b8152600260048201526024810182905260009073__$f57eb21c11c6dae369da3ca36f4f48eb77$__906303fbaf7390604401602060405180830381865af4158015610ac3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bb9190611579565b6000546001600160a01b031633146106515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610844565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610b9d8484610e8d565b9050610bb185828460808301356025610a51565b5050505050565b6060838383604051602001610bcf939291906114fc565b60405160208183030381529060405290509392505050565b6040805160608089013560208301526080808a01359383019390935260a0890135908201528591016040516020818303038152906040528051906020012014610c4357604051636fbd3b7160e11b815260040160405180910390fd5b8273__$2a7ef22e717e9afc55afc95d018bf1a85b$__6379de4601610c7f610c6e60208b018b61140b565b60051b681fffffffffffffffe01690565b60058660408c0135610c9460e08e018e61159b565b6040518763ffffffff1660e01b8152600401610cb5969594939291906115e4565b602060405180830381865af4158015610cd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf691906114ba565b14610d1457604051634371daa160e11b815260040160405180910390fd5b600073__$2a7ef22e717e9afc55afc95d018bf1a85b$__63c84583a18780519060200120604051602001610d4a91815260200190565b60408051601f19818403018152908290526001600160e01b031960e084901b168252610d7b91600590600401611647565b602060405180830381865af4158015610d98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbc91906114ba565b9050866040013573__$2a7ef22e717e9afc55afc95d018bf1a85b$__6379de4601610df38a6020016020810190610c6e919061140b565b60058686610e0460c08f018f61159b565b6040518763ffffffff1660e01b8152600401610e25969594939291906115e4565b602060405180830381865af4158015610e42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6691906114ba565b14610e845760405163017c689560e61b815260040160405180910390fd5b50505050505050565b60608282604051602001610ea2929190611672565b604051602081830303815290604052905092915050565b600060208284031215610ecb57600080fd5b81356001600160e01b031981168114610ee357600080fd5b9392505050565b6001600160a01b038116811461085657600080fd5b60008083601f840112610f1157600080fd5b5081356001600160401b03811115610f2857600080fd5b602083019150836020828501011115610f4057600080fd5b9250929050565b600060408284031215610f5957600080fd5b50919050565b60008060008060608587031215610f7557600080fd5b8435610f8081610eea565b935060208501356001600160401b0380821115610f9c57600080fd5b610fa888838901610eff565b90955093506040870135915080821115610fc157600080fd5b50610fce87828801610f47565b91505092959194509250565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561101857611018610fda565b604052919050565b60006001600160401b0383111561103957611039610fda565b61104c601f8401601f1916602001610ff0565b905082815283838301111561106057600080fd5b828260208301376000602084830101529392505050565b600082601f83011261108857600080fd5b610ee383833560208501611020565b600080600080608085870312156110ad57600080fd5b84356110b881610eea565b935060208501356110c881610eea565b92506040850135915060608501356001600160401b038111156110ea57600080fd5b610fce87828801611077565b6000806040838503121561110957600080fd5b823561111481610eea565b946020939093013593505050565b60008060006040848603121561113757600080fd5b83356001600160401b038082111561114e57600080fd5b61115a87838801610eff565b9095509350602086013591508082111561117357600080fd5b5061118086828701610f47565b9150509250925092565b6000806040838503121561119d57600080fd5b50508035926020909101359150565b600082601f8301126111bd57600080fd5b813560206001600160401b038211156111d8576111d8610fda565b8160051b6111e7828201610ff0565b928352848101820192828101908785111561120157600080fd5b83870192505b8483101561122057823582529183019190830190611207565b979650505050505050565b600080600080600060a0868803121561124357600080fd5b853561124e81610eea565b9450602086013561125e81610eea565b935060408601356001600160401b038082111561127a57600080fd5b61128689838a016111ac565b9450606088013591508082111561129c57600080fd5b6112a889838a016111ac565b935060808801359150808211156112be57600080fd5b506112cb88828901611077565b9150509295509295909350565b6000602082840312156112ea57600080fd5b81356001600160401b0381111561130057600080fd5b8201601f8101841361131157600080fd5b61059e84823560208401611020565b600080600080600060a0868803121561133857600080fd5b853561134381610eea565b9450602086013561135381610eea565b9350604086013592506060860135915060808601356001600160401b0381111561137c57600080fd5b6112cb88828901611077565b60006020828403121561139a57600080fd5b8135610ee381610eea565b6000808335601e198436030181126113bc57600080fd5b8301803591506001600160401b038211156113d657600080fd5b602001915036819003821315610f4057600080fd5b6000823560fe1983360301811261140157600080fd5b9190910192915050565b60006020828403121561141d57600080fd5b81356001600160401b0381168114610ee357600080fd5b8183823760009101908152919050565b60006020828403121561145657600080fd5b8151610ee381610eea565b6000815180845260005b818110156114875760208185018101518683018201520161146b565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610ee36020830184611461565b6000602082840312156114cc57600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038416815260406020820181905260009061152190830184866114d3565b95945050505050565b60008060006060848603121561153f57600080fd5b8351925060208401519150604084015190509250925092565b808201808211156103bb57634e487b7160e01b600052601160045260246000fd5b60006020828403121561158b57600080fd5b81518015158114610ee357600080fd5b6000808335601e198436030181126115b257600080fd5b8301803591506001600160401b038211156115cc57600080fd5b6020019150600581901b3603821315610f4057600080fd5b6001600160401b03878116825286166020820152604081018590526060810184905260a060808201819052810182905260006001600160fb1b0383111561162a57600080fd5b8260051b808560c08501379190910160c001979650505050505050565b60408152600061165a6040830185611461565b90506001600160401b03831660208301529392505050565b60208152600061059e6020830184866114d356fea264697066735822122015c5b2ee5575d5628a81684b90475371b8607d1f9176b96efbfeef61dd8ca5fb64736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100f75760003560e01c80638da5cb5b1161008a578063c47f002711610059578063c47f0027146102fe578063f23a6e611461031e578063f2fde38b1461034a578063fc4116831461036a57600080fd5b80638da5cb5b1461027457806396487d46146102925780639d9b1145146102b2578063bc197c81146102d257600080fd5b80633f15457f116100c65780633f15457f146101ce578063522f68151461020257806361b12c6614610224578063715018a61461025f57600080fd5b806301ffc9a7146101035780631250482f14610138578063150b7a0214610158578063179e740b1461019c57600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5061012361011e366004610eb9565b61038a565b60405190151581526020015b60405180910390f35b34801561014457600080fd5b50610123610153366004610f5f565b6103c1565b34801561016457600080fd5b50610183610173366004611097565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200161012f565b3480156101a857600080fd5b506003546001600160a01b03165b6040516001600160a01b03909116815260200161012f565b3480156101da57600080fd5b506101b67f000000000000000000000000000000000000000000000000000000000000000081565b34801561020e57600080fd5b5061022261021d3660046110f6565b6105a6565b005b34801561023057600080fd5b506040517f0000000000000000000000000000000000000000000000000000000000000000815260200161012f565b34801561026b57600080fd5b5061022261063f565b34801561028057600080fd5b506000546001600160a01b03166101b6565b34801561029e57600080fd5b506101236102ad366004611122565b610653565b3480156102be57600080fd5b506101236102cd36600461118a565b6106a4565b3480156102de57600080fd5b506101836102ed36600461122b565b63bc197c8160e01b95945050505050565b34801561030a57600080fd5b506102226103193660046112d8565b6106b6565b34801561032a57600080fd5b50610183610339366004611320565b63f23a6e6160e01b95945050505050565b34801561035657600080fd5b50610222610365366004611388565b6107db565b34801561037657600080fd5b50610222610385366004611388565b610859565b60006001600160e01b03198216630271189760e51b14806103bb57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006103cb61090e565b60008080806103e56103e060208801886113a5565b610967565b9195509350915061040283836103fb89806113eb565b91906109ee565b905061041e898989876104158b806113eb565b93929190610a34565b600061045261042d88806113eb565b61043e90604081019060200161140b565b6001600160401b03168360809190911b1790565b905061045d81610a69565b1561047b576040516370de22b760e01b815260040160405180910390fd5b60008a6001600160a01b03168a8a604051610497929190611434565b6000604051808303816000865af19150503d80600081146104d4576040519150601f19603f3d011682016040523d82523d6000602084013e6104d9565b606091505b50509050801561058e576040516306449da160e41b815260026004820152602481018390526001604482015273__$f57eb21c11c6dae369da3ca36f4f48eb77$__90636449da109060640160006040518083038186803b15801561053c57600080fd5b505af4158015610550573d6000803e3d6000fd5b505050507f0eb7ee080f865f1cadc4f54daf58cc3b8879e888832867d13351edcec0fbdc548260405161058591815260200190565b60405180910390a15b9550505050505061059e60018055565b949350505050565b3330146105c65760405163a08d601d60e01b815260040160405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610613576040519150601f19603f3d011682016040523d82523d6000602084013e610618565b606091505b505090508061063a57604051630ce8f45160e31b815260040160405180910390fd5b505050565b610647610ae7565b6106516000610b41565b565b60008080806106686103e060208701876113a5565b9194509250905061067e82826103fb88806113eb565b5061069787878561068f89806113eb565b929190610b91565b5060019695505050505050565b6000608082901b831761059e81610a69565b6106be610ae7565b6040516302571be360e01b81527f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906302571be390602401602060405180830381865afa158015610745573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107699190611444565b60405163c47f002760e01b81529091506001600160a01b0382169063c47f0027906107989085906004016114a7565b6020604051808303816000875af11580156107b7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a91906114ba565b6107e3610ae7565b6001600160a01b03811661084d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61085681610b41565b50565b610861610ae7565b600380546001600160a01b0319166001600160a01b0383169081179091556040805163b688a36360e01b8152905163b688a3639160048082019260009290919082900301818387803b1580156108b657600080fd5b505af11580156108ca573d6000803e3d6000fd5b50506040516001600160a01b03841681527f4991c6f37185659e276ff918a96f3e20e6c5abcd8c9aab450dc19c2f7ad35cb59250602001905060405180910390a150565b6002600154036109605760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610844565b6002600155565b60035460405163035e6a0960e61b8152600091829182916001600160a01b03169063d79a8240906109a0903090899089906004016114fc565b606060405180830381865afa1580156109bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e1919061152a565b9250925092509250925092565b6000806109fe602086018661140b565b610a11906001600160401b031685611558565b90508281111561059e5760405163fd9ae91f60e01b815260040160405180910390fd5b6000610a41858585610bb8565b9050610a61868284606083013560255b6001600160401b03166015610be7565b505050505050565b6040516303fbaf7360e01b8152600260048201526024810182905260009073__$f57eb21c11c6dae369da3ca36f4f48eb77$__906303fbaf7390604401602060405180830381865af4158015610ac3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bb9190611579565b6000546001600160a01b031633146106515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610844565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610b9d8484610e8d565b9050610bb185828460808301356025610a51565b5050505050565b6060838383604051602001610bcf939291906114fc565b60405160208183030381529060405290509392505050565b6040805160608089013560208301526080808a01359383019390935260a0890135908201528591016040516020818303038152906040528051906020012014610c4357604051636fbd3b7160e11b815260040160405180910390fd5b8273__$2a7ef22e717e9afc55afc95d018bf1a85b$__6379de4601610c7f610c6e60208b018b61140b565b60051b681fffffffffffffffe01690565b60058660408c0135610c9460e08e018e61159b565b6040518763ffffffff1660e01b8152600401610cb5969594939291906115e4565b602060405180830381865af4158015610cd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf691906114ba565b14610d1457604051634371daa160e11b815260040160405180910390fd5b600073__$2a7ef22e717e9afc55afc95d018bf1a85b$__63c84583a18780519060200120604051602001610d4a91815260200190565b60408051601f19818403018152908290526001600160e01b031960e084901b168252610d7b91600590600401611647565b602060405180830381865af4158015610d98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbc91906114ba565b9050866040013573__$2a7ef22e717e9afc55afc95d018bf1a85b$__6379de4601610df38a6020016020810190610c6e919061140b565b60058686610e0460c08f018f61159b565b6040518763ffffffff1660e01b8152600401610e25969594939291906115e4565b602060405180830381865af4158015610e42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6691906114ba565b14610e845760405163017c689560e61b815260040160405180910390fd5b50505050505050565b60608282604051602001610ea2929190611672565b604051602081830303815290604052905092915050565b600060208284031215610ecb57600080fd5b81356001600160e01b031981168114610ee357600080fd5b9392505050565b6001600160a01b038116811461085657600080fd5b60008083601f840112610f1157600080fd5b5081356001600160401b03811115610f2857600080fd5b602083019150836020828501011115610f4057600080fd5b9250929050565b600060408284031215610f5957600080fd5b50919050565b60008060008060608587031215610f7557600080fd5b8435610f8081610eea565b935060208501356001600160401b0380821115610f9c57600080fd5b610fa888838901610eff565b90955093506040870135915080821115610fc157600080fd5b50610fce87828801610f47565b91505092959194509250565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561101857611018610fda565b604052919050565b60006001600160401b0383111561103957611039610fda565b61104c601f8401601f1916602001610ff0565b905082815283838301111561106057600080fd5b828260208301376000602084830101529392505050565b600082601f83011261108857600080fd5b610ee383833560208501611020565b600080600080608085870312156110ad57600080fd5b84356110b881610eea565b935060208501356110c881610eea565b92506040850135915060608501356001600160401b038111156110ea57600080fd5b610fce87828801611077565b6000806040838503121561110957600080fd5b823561111481610eea565b946020939093013593505050565b60008060006040848603121561113757600080fd5b83356001600160401b038082111561114e57600080fd5b61115a87838801610eff565b9095509350602086013591508082111561117357600080fd5b5061118086828701610f47565b9150509250925092565b6000806040838503121561119d57600080fd5b50508035926020909101359150565b600082601f8301126111bd57600080fd5b813560206001600160401b038211156111d8576111d8610fda565b8160051b6111e7828201610ff0565b928352848101820192828101908785111561120157600080fd5b83870192505b8483101561122057823582529183019190830190611207565b979650505050505050565b600080600080600060a0868803121561124357600080fd5b853561124e81610eea565b9450602086013561125e81610eea565b935060408601356001600160401b038082111561127a57600080fd5b61128689838a016111ac565b9450606088013591508082111561129c57600080fd5b6112a889838a016111ac565b935060808801359150808211156112be57600080fd5b506112cb88828901611077565b9150509295509295909350565b6000602082840312156112ea57600080fd5b81356001600160401b0381111561130057600080fd5b8201601f8101841361131157600080fd5b61059e84823560208401611020565b600080600080600060a0868803121561133857600080fd5b853561134381610eea565b9450602086013561135381610eea565b9350604086013592506060860135915060808601356001600160401b0381111561137c57600080fd5b6112cb88828901611077565b60006020828403121561139a57600080fd5b8135610ee381610eea565b6000808335601e198436030181126113bc57600080fd5b8301803591506001600160401b038211156113d657600080fd5b602001915036819003821315610f4057600080fd5b6000823560fe1983360301811261140157600080fd5b9190910192915050565b60006020828403121561141d57600080fd5b81356001600160401b0381168114610ee357600080fd5b8183823760009101908152919050565b60006020828403121561145657600080fd5b8151610ee381610eea565b6000815180845260005b818110156114875760208185018101518683018201520161146b565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610ee36020830184611461565b6000602082840312156114cc57600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038416815260406020820181905260009061152190830184866114d3565b95945050505050565b60008060006060848603121561153f57600080fd5b8351925060208401519150604084015190509250925092565b808201808211156103bb57634e487b7160e01b600052601160045260246000fd5b60006020828403121561158b57600080fd5b81518015158114610ee357600080fd5b6000808335601e198436030181126115b257600080fd5b8301803591506001600160401b038211156115cc57600080fd5b6020019150600581901b3603821315610f4057600080fd5b6001600160401b03878116825286166020820152604081018590526060810184905260a060808201819052810182905260006001600160fb1b0383111561162a57600080fd5b8260051b808560c08501379190910160c001979650505050505050565b60408152600061165a6040830185611461565b90506001600160401b03831660208301529392505050565b60208152600061059e6020830184866114d356fea264697066735822122015c5b2ee5575d5628a81684b90475371b8607d1f9176b96efbfeef61dd8ca5fb64736f6c63430008130033",
  "linkReferences": {
    "@cartesi/util/contracts/Bitmask.sol": {
      "Bitmask": [
        {
          "length": 20,
          "start": 1960
        },
        {
          "length": 20,
          "start": 3370
        }
      ]
    },
    "@cartesi/util/contracts/MerkleV2.sol": {
      "MerkleV2": [
        {
          "length": 20,
          "start": 3815
        },
        {
          "length": 20,
          "start": 4025
        },
        {
          "length": 20,
          "start": 4198
        }
      ]
    }
  },
  "deployedLinkReferences": {
    "@cartesi/util/contracts/Bitmask.sol": {
      "Bitmask": [
        {
          "length": 20,
          "start": 1287
        },
        {
          "length": 20,
          "start": 2697
        }
      ]
    },
    "@cartesi/util/contracts/MerkleV2.sol": {
      "MerkleV2": [
        {
          "length": 20,
          "start": 3142
        },
        {
          "length": 20,
          "start": 3352
        },
        {
          "length": 20,
          "start": 3525
        }
      ]
    }
  },
  "devdoc": {
    "events": {
      "NewConsensus(address)": {
        "details": "MUST be triggered on a successful call to `migrateToConsensus`.",
        "params": {
          "newConsensus": "The new consensus contract"
        }
      },
      "VoucherExecuted(uint256)": {
        "params": {
          "voucherId": "A number that uniquely identifies the voucher                  amongst all vouchers emitted by this DApp"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Calls the `join` function on `_consensus`.",
        "params": {
          "_consensus": "The initial consensus contract",
          "_ens": "The ENS registry",
          "_owner": "The initial DApp owner",
          "_templateHash": "The initial machine state hash"
        }
      },
      "executeVoucher(address,bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": {
        "details": "On a successful execution, emits a `VoucherExecuted` event.      Execution of already executed voucher will raise a `VoucherReexecutionNotAllowed` error.",
        "params": {
          "_destination": "The address that will receive the payload through a message call",
          "_payload": "The payload, which—in the case of Solidity contracts—encodes a function call",
          "_proof": "The proof used to validate the voucher against               a claim submitted by the current consensus contract"
        },
        "returns": {
          "_0": "Whether the execution was successful or not"
        }
      },
      "getConsensus()": {
        "returns": {
          "_0": "The current consensus"
        }
      },
      "getTemplateHash()": {
        "returns": {
          "_0": "The DApp's template hash"
        }
      },
      "migrateToConsensus(address)": {
        "details": "Can only be called by the DApp owner.",
        "params": {
          "_newConsensus": "The new consensus"
        }
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "validateNotice(bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": {
        "params": {
          "_notice": "The notice",
          "_proof": "Data for validating outputs"
        },
        "returns": {
          "_0": "Whether the notice is valid or not"
        }
      },
      "wasVoucherExecuted(uint256,uint256)": {
        "params": {
          "_inputIndex": "The index of the input in the input box",
          "_outputIndexWithinInput": "The index of output emitted by the input"
        },
        "returns": {
          "_0": "Whether the voucher has been executed before"
        }
      },
      "withdrawEther(address,uint256)": {
        "details": "This function can only be called by the DApp itself through vouchers.      If this method is not called by DApp itself, `OnlyDApp` error is raised.      If the transfer fails, `EtherTransferFailed` error is raised.",
        "params": {
          "_receiver": "The address which will receive the amount of Ether",
          "_value": "The amount of Ether to be transferred in Wei"
        }
      }
    },
    "stateVariables": {
      "consensus": {
        "details": "See the `getConsensus` and `migrateToConsensus` functions."
      },
      "templateHash": {
        "details": "See the `getTemplateHash` function."
      },
      "voucherBitmask": {
        "details": "See the `wasVoucherExecuted` function."
      }
    },
    "title": "Cartesi DApp",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "EtherTransferFailed()": [
        {
          "notice": "Raised when the transfer fails."
        }
      ],
      "IncorrectEpochHash()": [
        {
          "notice": "Raised when some `OutputValidityProof` variables does not match         the presented finalized epoch."
        }
      ],
      "IncorrectOutputHashesRootHash()": [
        {
          "notice": "Raised when Merkle root of output hash is NOT contained         in the output metadata array memory range."
        }
      ],
      "IncorrectOutputsEpochRootHash()": [
        {
          "notice": "Raised when `OutputValidityProof` metadata memory range is NOT         contained in epoch's output memory range."
        }
      ],
      "InputIndexOutOfClaimBounds()": [
        {
          "notice": "Raised when epoch input index is NOT compatible with the         provided input index range."
        }
      ],
      "OnlyDApp()": [
        {
          "notice": "Raised when a mehtod is not called by DApp itself."
        }
      ],
      "VoucherReexecutionNotAllowed()": [
        {
          "notice": "Raised when executing an already executed voucher."
        }
      ]
    },
    "events": {
      "NewConsensus(address)": {
        "notice": "The DApp has migrated to another consensus contract."
      },
      "VoucherExecuted(uint256)": {
        "notice": "A voucher was executed from the DApp."
      }
    },
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Creates a `CartesiDApp` contract."
      },
      "ens()": {
        "notice": "The ENS registry."
      },
      "executeVoucher(address,bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": {
        "notice": "Try to execute a voucher. Reverts if voucher was already successfully executed."
      },
      "getConsensus()": {
        "notice": "Get the current consensus."
      },
      "getTemplateHash()": {
        "notice": "Get the DApp's template hash."
      },
      "migrateToConsensus(address)": {
        "notice": "Migrate the DApp to a new consensus."
      },
      "validateNotice(bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": {
        "notice": "Validate a notice."
      },
      "wasVoucherExecuted(uint256,uint256)": {
        "notice": "Check whether a voucher has been executed."
      },
      "withdrawEther(address,uint256)": {
        "notice": "Transfer some amount of Ether to some recipient."
      }
    },
    "notice": "This contract acts as the base layer incarnation of a DApp running on the execution layer. The DApp is hereby able to interact with other smart contracts through the execution of vouchers and the validation of notices. These outputs are generated by the DApp backend on the execution layer and can be proven in the base layer thanks to claims submitted by a consensus contract. A voucher is a one-time message call to another contract. It can encode asset transfers, approvals, or any other message call that doesn't require Ether to be sent along. A voucher will only be consumed if the underlying message call succeeds (that is, it doesn't revert). Furthermore, the return data of the message call is discarded entirely. As a protective measure against reentrancy attacks, nested voucher executions are prohibited. A notice, on the other hand, constitutes an arbitrary piece of data that can be proven any number of times. On their own, they do not trigger any type of contract-to-contract interaction. Rather, they merely serve to attest off-chain results, e.g. which player won a particular chess match. Every DApp is subscribed to a consensus contract, and governed by a single address, the owner. The consensus has the power of submitting claims, which, in turn, are used to validate vouchers and notices. Meanwhile, the owner has complete power over the DApp, as it can replace the consensus at any time. Therefore, the users of a DApp must trust both the consensus and the DApp owner. The DApp developer can choose whichever ownership and consensus models it wants. Examples of DApp ownership models include: * no owner (address zero) * individual signer (externally-owned account) * multiple signers (multi-sig) * DAO (decentralized autonomous organization) * self-owned DApp (off-chain governance logic) See `IConsensus` for examples of consensus models. This contract inherits the following OpenZeppelin contracts. For more information, please consult OpenZeppelin's official documentation. * `Ownable` * `ERC721Holder` * `ERC1155Holder` * `ReentrancyGuard`",
    "version": 1
  },
  "evm": {
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "1164000",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "ens()": "infinite",
        "executeVoucher(address,bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": "infinite",
        "getConsensus()": "2410",
        "getTemplateHash()": "infinite",
        "migrateToConsensus(address)": "infinite",
        "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
        "onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
        "onERC721Received(address,address,uint256,bytes)": "infinite",
        "owner()": "2354",
        "renounceOwnership()": "infinite",
        "setName(string)": "infinite",
        "supportsInterface(bytes4)": "450",
        "transferOwnership(address)": "infinite",
        "validateNotice(bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": "infinite",
        "wasVoucherExecuted(uint256,uint256)": "infinite",
        "withdrawEther(address,uint256)": "infinite"
      },
      "internal": {
        "_wasVoucherExecuted(uint256)": "infinite",
        "getClaim(bytes calldata)": "infinite"
      }
    },
    "methodIdentifiers": {
      "ens()": "3f15457f",
      "executeVoucher(address,bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": "1250482f",
      "getConsensus()": "179e740b",
      "getTemplateHash()": "61b12c66",
      "migrateToConsensus(address)": "fc411683",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
      "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
      "onERC721Received(address,address,uint256,bytes)": "150b7a02",
      "owner()": "8da5cb5b",
      "renounceOwnership()": "715018a6",
      "setName(string)": "c47f0027",
      "supportsInterface(bytes4)": "01ffc9a7",
      "transferOwnership(address)": "f2fde38b",
      "validateNotice(bytes,((uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32[],bytes32[]),bytes))": "96487d46",
      "wasVoucherExecuted(uint256,uint256)": "9d9b1145",
      "withdrawEther(address,uint256)": "522f6815"
    }
  }
}